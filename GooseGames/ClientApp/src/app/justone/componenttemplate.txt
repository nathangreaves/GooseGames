import { Component } from '@angular/core';
import * as _ from 'lodash';
import { JustOnePlayerDetailsService } from '../../../services/justone/playerdetails'
import { PlayerDetails, UpdatePlayerDetailsRequest } from '../../../models/justone/player'
import { Router, ActivatedRoute, ParamMap } from '@angular/router';
import * as signalR from "@microsoft/signalr";
import { IPlayerSessionComponent } from '../../../models/justone/session';
import { PlayerStatus } from '../../../models/justone/playerstatus';
import { JustOnePlayerStatusService } from '../../../services/justone/playerstatus';
import { GenericResponseBase } from '../../../models/genericresponse';

@Component({
  selector: 'app-just-one-*componentname*-component',
  templateUrl: './*componentname*.component.html'
})

export class JustOne*componentname*Component implements IPlayerSessionComponent {
 
  _router: Router;
  _playerStatusService: JustOnePlayerStatusService;

  SessionId: string;
  PlayerId: string;  
  Loading: boolean = true;
  ErrorMessage: string;

  constructor(playerStatusService: JustOnePlayerStatusService, router: Router, activatedRoute: ActivatedRoute) {
    this._router = router;
    this._playerStatusService = playerStatusService;

    this.SessionId = activatedRoute.snapshot.params.SessionId;
    this.PlayerId = activatedRoute.snapshot.params.PlayerId;

    this._playerStatusService.Validate(this, PlayerStatus.PassivePlayerOutcomeVote, () => { })
      .then(data => {
        if (data.success) {
          return this.load();
        }
      })
      .then(data => {
        if (data && data.success) {
          this.Loading = false;
        }
      });
  }

  load(): Promise<GenericResponseBase> {
    return Promise.resolve({ success: true, errorCode: null });
  }

  HandleGenericError() {
    this.ErrorMessage = "An Unknown Error Occurred";
  }
}
